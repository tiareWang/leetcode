Longest Substring Without Repeating Characters  Medium
Given a string s, find the length of the longest substring without repeating characters.

Example 1:
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Example 2:
Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:
Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

Constraints:
0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int res = 0;
        int start = 0;
        int end = 0;
        int[] map = new int[128];
        for(int i = 0; i < s.length(); i++){
            if(map[s.charAt(i)] == 1){
                res = Math.max(res, end-start+1);
                while(s.charAt(start) != s.charAt(i)){
                    map[s.charAt(start)] = 0;
                    start ++;
                }
                start ++;
            } else {
                map[s.charAt(i)] = 1;
                end = i;
                res = Math.max(res, end-start+1);
            }
        }
        return res;
    }
}
不是只有当有重复才能对比res，也可能一整个都没有重复
