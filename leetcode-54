Spiral Matrix  Medium
Given an m x n matrix, return all elements of the matrix in spiral order.

Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

Example 2:
Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

Constraints:
m == matrix.length
n == matrix[i].length
1 <= m, n <= 10
-100 <= matrix[i][j] <= 100

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m = matrix.length-1;
        int n = matrix[0].length-1;
        int minx = 0;
        int miny = 0;
        List<Integer> list = new LinkedList<>();
        while(minx <= m && miny <= n){
            for(int i = miny; i <= n; i++){
                list.add(matrix[minx][i]);
            }
            minx++;
            if(minx > m){
                break;
            }
            for(int i = minx; i <= m; i++){
                list.add(matrix[i][n]);
            }
            n--;
            if(miny > n){
                break;
            }
            for(int i = n; i >= miny; i--){
                list.add(matrix[m][i]);
            }
            m--;
            if(minx > m){
                break;
            }
            for(int i = m; i >= minx; i--){
                list.add(matrix[i][miny]);
            }
            miny++;
        }
        return list;
    }
}
