230. Kth Smallest Element in a BST  Medium

Given the root of a binary search tree, and an integer k, 
return the kth smallest value (1-indexed) of all the values of the nodes in the tree.

Example 1:
Input: root = [3,1,4,null,2], k = 1
Output: 1

Example 2:
Input: root = [5,3,6,2,4,null,null,1], k = 3
Output: 3

Constraints:
The number of nodes in the tree is n.
1 <= k <= n <= 104
0 <= Node.val <= 104

class Solution {
    int ans=Integer.MAX_VALUE;
    int count = 1;
    public int kthSmallest(TreeNode root, int k) {
        if(root == null){
            return 0;
        }
        kthSmallest(root.left , k);
        // k--; 不能用k--的原因：k不会跟随kthSmallest去变化，没有把k带进去，
        //也不能马上带进去，用一个全局变量count就可以全局跟随
        if(k == count){
            ans = root.val;
        }
        count++;
        kthSmallest(root.right , k);
        return ans;
    }
}

或者直接inorder拿出所有value加入list中，list的第k-1个📄就是
