Group Anagrams  Medium

Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:
Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]

Example 2:
Input: strs = [""]
Output: [[""]]

Example 3:
Input: strs = ["a"]
Output: [["a"]]

Constraints:
1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        if (strs == null || strs.length == 0) return new ArrayList<>();
        List<List<String>> res = new LinkedList<>();
        Map<String, List<String>> map = new HashMap<>();
        for(int i = 0; i < strs.length; i++){
            String cur = strs[i];
            char[] ch = cur.toCharArray();
            Arrays.sort(ch);
            cur = String.valueOf(ch);
            if(!map.containsKey(cur)){
                map.put(cur, new LinkedList<>());
            }
            map.get(cur).add(strs[i]);
        }
        // for(Map.Entry<String, List<String>> entry : map.entrySet()){
            // res.add(entry.getValue());
        // }
        // return res;
        return new LinkedList<>(map.values());
    }
}
