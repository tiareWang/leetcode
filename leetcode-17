17. Letter Combinations of a Phone Number  Medium

Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.
Return the answer in any order.
A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.

Example 1:
Input: digits = "23"
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]

Example 2:
Input: digits = ""
Output: []

Example 3:
Input: digits = "2"
Output: ["a","b","c"]

Constraints:
0 <= digits.length <= 4
digits[i] is a digit in the range ['2', '9'].

class Solution {
    List<String> res = new LinkedList<>();
    public List<String> letterCombinations(String digits) {
        // List<String> res = new LinkedList<>();
        if(digits.length() == 0){
            return res;
        }
        String[] mapping = new String[]{"0", "1", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        backtrack(digits, mapping, 0, new StringBuilder());
        return res;
    }
    public void backtrack(String digits, String[] mapping, int index, StringBuilder sb){
        if(index == digits.length()){
            res.add(sb.toString());
            return;
        }
        String str = mapping[digits.charAt(index)-'0'];
        for(char ch : str.toCharArray()){
            sb.append(ch);
            backtrack(digits, mapping, index+1, sb);
            sb.deleteCharAt(sb.length()-1);
        }
    }
}
